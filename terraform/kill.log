# aws_security_group.allow_all:
resource "aws_security_group" "allow_all" {
    arn                    = "arn:aws:ec2:us-west-2:909307856304:security-group/sg-0ed83d78a471d3a36"
    description            = "Allow inbound and outbound traffic to dev."
    egress                 = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = [90mnull[0m[0m
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
    ]
    id                     = "sg-0ed83d78a471d3a36"
    ingress                = [
        {
            cidr_blocks      = [
                "98.31.45.235/32",
            ]
            description      = [90mnull[0m[0m
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
    ]
    name                   = "container-sorcerer-dev"
    name_prefix            = [90mnull[0m[0m
    owner_id               = "909307856304"
    revoke_rules_on_delete = false
    tags                   = {}
    tags_all               = {
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc_id                 = "vpc-099cdfd0d3263b7e1"
}


# module.eks.data.aws_caller_identity.current:
data "aws_caller_identity" "current" {
    account_id = "909307856304"
    arn        = "arn:aws:iam::909307856304:user/cpate"
    id         = "909307856304"
    user_id    = "AIDAILJQKX4U2X522CYZ6"
}

# module.eks.data.aws_eks_addon_version.this["coredns"]:
data "aws_eks_addon_version" "this" {
    addon_name         = "coredns"
    id                 = "coredns"
    kubernetes_version = "1.29"
    most_recent        = true
    version            = "v1.11.1-eksbuild.9"
}

# module.eks.data.aws_eks_addon_version.this["kube-proxy"]:
data "aws_eks_addon_version" "this" {
    addon_name         = "kube-proxy"
    id                 = "kube-proxy"
    kubernetes_version = "1.29"
    most_recent        = true
    version            = "v1.29.3-eksbuild.2"
}

# module.eks.data.aws_eks_addon_version.this["vpc-cni"]:
data "aws_eks_addon_version" "this" {
    addon_name         = "vpc-cni"
    id                 = "vpc-cni"
    kubernetes_version = "1.29"
    most_recent        = true
    version            = "v1.18.1-eksbuild.3"
}

# module.eks.data.aws_iam_policy_document.assume_role_policy[0]:
data "aws_iam_policy_document" "assume_role_policy" {
    id            = "2764486067"
    json          = jsonencode(
        {
            Statement = [
                {
                    Action    = "sts:AssumeRole"
                    Effect    = "Allow"
                    Principal = {
                        Service = "eks.amazonaws.com"
                    }
                    Sid       = "EKSClusterAssumeRole"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    minified_json = jsonencode(
        {
            Statement = [
                {
                    Action    = "sts:AssumeRole"
                    Effect    = "Allow"
                    Principal = {
                        Service = "eks.amazonaws.com"
                    }
                    Sid       = "EKSClusterAssumeRole"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    version       = "2012-10-17"

    statement {
        actions       = [
            "sts:AssumeRole",
        ]
        effect        = "Allow"
        not_actions   = []
        not_resources = []
        resources     = []
        sid           = "EKSClusterAssumeRole"

        principals {
            identifiers = [
                "eks.amazonaws.com",
            ]
            type        = "Service"
        }
    }
}

# module.eks.data.aws_iam_session_context.current:
data "aws_iam_session_context" "current" {
    arn          = "arn:aws:iam::909307856304:user/cpate"
    id           = "arn:aws:iam::909307856304:user/cpate"
    issuer_arn   = "arn:aws:iam::909307856304:user/cpate"
    issuer_id    = [90mnull[0m[0m
    issuer_name  = [90mnull[0m[0m
    session_name = [90mnull[0m[0m
}

# module.eks.data.aws_partition.current:
data "aws_partition" "current" {
    dns_suffix         = "amazonaws.com"
    id                 = "aws"
    partition          = "aws"
    reverse_dns_prefix = "com.amazonaws"
}

# module.eks.data.tls_certificate.this[0]:
data "tls_certificate" "this" {
    certificates = [
        {
            cert_pem             = <<-EOT
                -----BEGIN CERTIFICATE-----
                MIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV
                BAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw
                MAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0
                eTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV
                UzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE
                ChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp
                ZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi
                MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/
                y8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N
                Tm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo
                Ot+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C
                zyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J
                Q4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB
                AAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O
                BBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV
                rNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u
                c3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud
                HwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG
                BFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G
                VfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1
                l08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt
                8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ
                59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu
                VsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=
                -----END CERTIFICATE-----
            EOT
            is_ca                = true
            issuer               = "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US"
            not_after            = "2034-06-28T17:39:16Z"
            not_before           = "2009-09-02T00:00:00Z"
            public_key_algorithm = "RSA"
            serial_number        = "12037640545166866303"
            sha1_fingerprint     = "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            signature_algorithm  = "SHA256-RSA"
            subject              = "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US"
            version              = 3
        },
        {
            cert_pem             = <<-EOT
                -----BEGIN CERTIFICATE-----
                MIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF
                ADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj
                b3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x
                OzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1
                dGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL
                MAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv
                b3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj
                ca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM
                9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw
                IFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6
                VOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L
                93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm
                jgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/
                BAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW
                gBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH
                MAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH
                MAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy
                MD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0
                LmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF
                AAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW
                MiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma
                eyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK
                bRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN
                0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U
                akcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==
                -----END CERTIFICATE-----
            EOT
            is_ca                = true
            issuer               = "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US"
            not_after            = "2037-12-31T01:00:00Z"
            not_before           = "2015-05-25T12:00:00Z"
            public_key_algorithm = "RSA"
            serial_number        = "144918191876577076464031512351042010504348870"
            sha1_fingerprint     = "06b25927c42a721631c1efd9431e648fa62e1e39"
            signature_algorithm  = "SHA256-RSA"
            subject              = "CN=Amazon Root CA 1,O=Amazon,C=US"
            version              = 3
        },
        {
            cert_pem             = <<-EOT
                -----BEGIN CERTIFICATE-----
                MIIEXjCCA0agAwIBAgITB3MSSkvL1E7HtTvq8ZSELToPoTANBgkqhkiG9w0BAQsF
                ADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6
                b24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjUzMFoXDTMwMDgyMzIyMjUzMFowPDEL
                MAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT
                QSAyMDQ4IE0wMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALtDGMZa
                qHneKei1by6+pUPPLljTB143Si6VpEWPc6mSkFhZb/6qrkZyoHlQLbDYnI2D7hD0
                sdzEqfnuAjIsuXQLG3A8TvX6V3oFNBFVe8NlLJHvBseKY88saLwufxkZVwk74g4n
                WlNMXzla9Y5F3wwRHwMVH443xGz6UtGSZSqQ94eFx5X7Tlqt8whi8qCaKdZ5rNak
                +r9nUThOeClqFd4oXych//Rc7Y0eX1KNWHYSI1Nk31mYgiK3JvH063g+K9tHA63Z
                eTgKgndlh+WI+zv7i44HepRZjA1FYwYZ9Vv/9UkC5Yz8/yU65fgjaE+wVHM4e/Yy
                C2osrPWE7gJ+dXMCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD
                VR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV
                HQ4EFgQUwDFSzVpQw4J8dHHOy+mc+XrrguIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU
                lC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v
                b2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov
                L2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E
                ODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv
                b3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB
                AQAtTi6Fs0Azfi+iwm7jrz+CSxHH+uHl7Law3MQSXVtR8RV53PtR6r/6gNpqlzdo
                Zq4FKbADi1v9Bun8RY8D51uedRfjsbeodizeBB8nXmeyD33Ep7VATj4ozcd31YFV
                fgRhvTSxNrrTlNpWkUk0m3BMPv8sg381HhA6uEYokE5q9uws/3YkKqRiEz3TsaWm
                JqIRZhMbgAfp7O7FUwFIb7UIspogZSKxPIWJpxiPo3TcBambbVtQOcNRWz5qCQdD
                slI2yayq0n2TXoHyNCLEH8rpsJRVILFsg0jc7BaFrMnF462+ajSehgj12IidNeRN
                4zl+EoNaWdpnWndvSpAEkq2P
                -----END CERTIFICATE-----
            EOT
            is_ca                = true
            issuer               = "CN=Amazon Root CA 1,O=Amazon,C=US"
            not_after            = "2030-08-23T22:25:30Z"
            not_before           = "2022-08-23T22:25:30Z"
            public_key_algorithm = "RSA"
            serial_number        = "166129353110899469622597955040406457904926625"
            sha1_fingerprint     = "414a2060b738c635cc7fc243e052615592830c53"
            signature_algorithm  = "SHA256-RSA"
            subject              = "CN=Amazon RSA 2048 M02,O=Amazon,C=US"
            version              = 3
        },
        {
            cert_pem             = <<-EOT
                -----BEGIN CERTIFICATE-----
                MIIF5TCCBM2gAwIBAgIQDsWM2D5RSLl7IRD58Bp6DzANBgkqhkiG9w0BAQsFADA8
                MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g
                UlNBIDIwNDggTTAyMB4XDTI0MDQwMTAwMDAwMFoXDTI1MDQzMDIzNTk1OVowKDEm
                MCQGA1UEAwwdKi5la3MudXMtd2VzdC0yLmFtYXpvbmF3cy5jb20wggEiMA0GCSqG
                SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDX5xeQmZmCHJG/Hd1k93EKIB8aJgqMBjV8
                hK/mr1q0NT//Sv1xJGaZELpdUh1rAYUSSGUs0rRC8+vugtpzOMJ6asPo4KFOxfBe
                eq+QZddyw7yay4RaywlHlBuvqhZkMcTyie3Bw08EnKct7xPKcn11cFHf5Uef1Q+G
                LyWJealim9xLyaSZ3VdKswDVn4YrqWaCi89RgngtldUTpTBBOr52C6ZOcaAPZj7L
                Mkui4/kC4dTtnCKJKmVKT1gnbKK/bcH3G63M2EOSjhR1JFMyTNBs0UNfDqVFnpIB
                gc6antQWJ1z5BpiejH0HJlDBfa4JJ9LSbSSl4oSnW1m5FWgOP6TrAgMBAAGjggL1
                MIIC8TAfBgNVHSMEGDAWgBTAMVLNWlDDgnx0cc7L6Zz5euuC4jAdBgNVHQ4EFgQU
                iV25OQVdcpXV1bT71pUVtEYNuiAwKAYDVR0RBCEwH4IdKi5la3MudXMtd2VzdC0y
                LmFtYXpvbmF3cy5jb20wEwYDVR0gBAwwCjAIBgZngQwBAgEwDgYDVR0PAQH/BAQD
                AgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCg
                LqAshipodHRwOi8vY3JsLnIybTAyLmFtYXpvbnRydXN0LmNvbS9yMm0wMi5jcmww
                dQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5yMm0wMi5h
                bWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJtMDIuYW1h
                em9udHJ1c3QuY29tL3IybTAyLmNlcjAMBgNVHRMBAf8EAjAAMIIBfQYKKwYBBAHW
                eQIEAgSCAW0EggFpAWcAdgDPEVbu1S58r/OHW9lpLpvpGnFnSrAX7KwB0lt3zsw7
                CAAAAY6aMr/xAAAEAwBHMEUCIEkz4BRPTftldFZ3x7B3K5F91iqxjGZKYVBh7ChF
                WMa1AiEA5Tac6flLFvDsSI9OprjWela3qTk8/meb1i4aTt4vLYUAdgB9WR4S4Xgq
                exxhZ3xe/fjQh1wUoE6VnrkDL9kOjC55uAAAAY6aMr+zAAAEAwBHMEUCIHFcffDz
                LXWVRQA1pu63XR9odC62oKPm00qYSEcIK9QhAiEAze+8hnlqBtqAkdLRW9KmBL2Q
                2el9UwkvdmiqSsAySBUAdQDm0jFjQHeMwRBBBtdxuc7B0kD2loSG+7qHMh39HjeO
                UAAAAY6aMr/EAAAEAwBGMEQCIG2ekWjuvM0A2NoQe7pGojHoYAyYK8+bISkAyTdC
                6HPBAiBR67wkUrGGjfMaD8cy2nBhuThBMB8kOZLm5YOegGDGyzANBgkqhkiG9w0B
                AQsFAAOCAQEAeNiU5fLVKMSwpzjtYMfCydbBJhmcbzBC81zZLFMETCoDT2gnJrEm
                86kN44ZMOonuECEs3n++I2lMoslsdXRevU7EZ4Jo8imOVy0Is05ffbfnv294viuG
                B23hMe9JQMVBuQzDyoUvBUhcJIxk7hQoFGjckh2P7km4HmH/0vZV13Lhrat9kws4
                3PzywHbzV5SsyOCszZFAowzsUaakhlBXOj++OeCTViHTLixywNhrA2n+21yCTVAj
                XAfc6i0YQ/B17FKkYlH/L5ZNl0UdXaW79LobdZdIsCfqOweGjUxLB/pWz2rK4JPI
                qBir/DrLGniJB5oLDg9DfN3gmRp6oWwWTw==
                -----END CERTIFICATE-----
            EOT
            is_ca                = false
            issuer               = "CN=Amazon RSA 2048 M02,O=Amazon,C=US"
            not_after            = "2025-04-30T23:59:59Z"
            not_before           = "2024-04-01T00:00:00Z"
            public_key_algorithm = "RSA"
            serial_number        = "19634931092034134610649070322822314511"
            sha1_fingerprint     = "3934cf57a95810cf5b7a7ce04dbb323fdb9a41a7"
            signature_algorithm  = "SHA256-RSA"
            subject              = "CN=*.eks.us-west-2.amazonaws.com"
            version              = 3
        },
    ]
    id           = "9ce40dc2a049cbf871181c1b9ce87cb4fcc34109"
    url          = "https://oidc.eks.us-west-2.amazonaws.com/id/F7E8BB852B48E44DAE8248407834632F"
    verify_chain = true
}

# module.eks.aws_cloudwatch_log_group.this[0]:
resource "aws_cloudwatch_log_group" "this" {
    arn               = "arn:aws:logs:us-west-2:909307856304:log-group:/aws/eks/container-sorcerer-dev/cluster"
    id                = "/aws/eks/container-sorcerer-dev/cluster"
    kms_key_id        = [90mnull[0m[0m
    log_group_class   = "STANDARD"
    name              = "/aws/eks/container-sorcerer-dev/cluster"
    name_prefix       = [90mnull[0m[0m
    retention_in_days = 90
    skip_destroy      = false
    tags              = {
        "Name" = "/aws/eks/container-sorcerer-dev/cluster"
    }
    tags_all          = {
        "Name"        = "/aws/eks/container-sorcerer-dev/cluster"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
}

# module.eks.aws_eks_addon.this["coredns"]:
resource "aws_eks_addon" "this" {
    addon_name                  = "coredns"
    addon_version               = "v1.11.1-eksbuild.9"
    arn                         = "arn:aws:eks:us-west-2:909307856304:addon/container-sorcerer-dev/coredns/70c7c6e1-ec80-dbbb-0263-96c8880ce04a"
    cluster_name                = "container-sorcerer-dev"
    configuration_values        = [90mnull[0m[0m
    created_at                  = "2024-05-18T22:12:53Z"
    id                          = "container-sorcerer-dev:coredns"
    modified_at                 = "2024-05-18T22:13:31Z"
    preserve                    = true
    resolve_conflicts_on_create = "OVERWRITE"
    resolve_conflicts_on_update = "OVERWRITE"
    service_account_role_arn    = [90mnull[0m[0m
    tags                        = {}
    tags_all                    = {
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }

    timeouts {}
}

# module.eks.aws_eks_addon.this["kube-proxy"]:
resource "aws_eks_addon" "this" {
    addon_name                  = "kube-proxy"
    addon_version               = "v1.29.3-eksbuild.2"
    arn                         = "arn:aws:eks:us-west-2:909307856304:addon/container-sorcerer-dev/kube-proxy/f6c7c6e1-ec7e-674f-967e-f5ae97ebd0c7"
    cluster_name                = "container-sorcerer-dev"
    configuration_values        = [90mnull[0m[0m
    created_at                  = "2024-05-18T22:12:53Z"
    id                          = "container-sorcerer-dev:kube-proxy"
    modified_at                 = "2024-05-18T22:13:26Z"
    preserve                    = true
    resolve_conflicts_on_create = "OVERWRITE"
    resolve_conflicts_on_update = "OVERWRITE"
    service_account_role_arn    = [90mnull[0m[0m
    tags                        = {}
    tags_all                    = {
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }

    timeouts {}
}

# module.eks.aws_eks_addon.this["vpc-cni"]:
resource "aws_eks_addon" "this" {
    addon_name                  = "vpc-cni"
    addon_version               = "v1.18.1-eksbuild.3"
    arn                         = "arn:aws:eks:us-west-2:909307856304:addon/container-sorcerer-dev/vpc-cni/28c7c6e1-ec7e-3dc1-d8b6-7e21be111df4"
    cluster_name                = "container-sorcerer-dev"
    configuration_values        = [90mnull[0m[0m
    created_at                  = "2024-05-18T22:12:53Z"
    id                          = "container-sorcerer-dev:vpc-cni"
    modified_at                 = "2024-05-18T22:13:27Z"
    preserve                    = true
    resolve_conflicts_on_create = "OVERWRITE"
    resolve_conflicts_on_update = "OVERWRITE"
    service_account_role_arn    = [90mnull[0m[0m
    tags                        = {}
    tags_all                    = {
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }

    timeouts {}
}

# module.eks.aws_eks_cluster.this[0]:
resource "aws_eks_cluster" "this" {
    arn                       = "arn:aws:eks:us-west-2:909307856304:cluster/container-sorcerer-dev"
    certificate_authority     = [
        {
            data = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJU1F1bytRZzFWNjB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBMU1UZ3lNakF3TXpOYUZ3MHpOREExTVRZeU1qQTFNek5hTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNzeDZWc3BiNFhWRWJrM3JVT2laOWVLdkFBaE9wbHVEMG5QWDVRU00wc1QrZHZUVHZ1K1lBNDIyZk0Kd01nSmFWMXhhbm9ieG9xL0lncWlaZzhJZXRQckkwMzU5OUY1QXlCb0x6MnN4dGsxekJaV2R1azlaampWWXJKdgpaR0djQ2xEWTBtK3htYVlsZTYvMkMrYk5URGczeWM3enpZTkx3SzBxcExEdG1vMjJVUXZVaGI1OC9EZjU4QzBxCmNKMm1ETnFneTdsR3pPQ05ZRUxzRHo4bTVLZ05UNXNkdW82aStXb2J3VDQwUEIrRldWVEV2S25ZZXB2ZGpsQmEKY2YydHp1K1dyRWhyVkJEKzY5SEFJZlB2Vk5NSVIyYXkzUXpIUFVzZDBWbElXOUJjb2g3NG1TSlFSS0ZKRFUzbgpsMkpzOWg4cHpkVmFSV0t1dlBERC8wak9ncnFOQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSZmorK2l4a2lZaUJXUExWcTg1empyL3EwKy9qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjhpMnVRRnZSLwp2ZXorNDF6MXF2NWQyNjZjTnhjVFpTcnk0TUUzZFZ4dUFLSzN1dUIzSThJN2xoRXV0eldFUlJteVI1Zm9JemE1CkYrc3hvb2VqSkdVcHNVSFNkemticVErQlR0RWNITEFKSHRsRVp6Z2xXOGhaQ2IvbXRhcDJScGZybVhtNmQzN1YKeUJPYjNERGc5OENYc1g5ei9vQzlYdlpzTmxncFdvV3NjTkFYU3BLeFhJb2IyLzVHVFFFelYxbFR3OW4wVG52MwpKOE40Vk93Zjh0OVcrRDhoOHQ1YnNGa05hazh2N1lsNVc5UzJVZGpTNTBFOTdCT21Wbk53WWdpbEo5T2R5QjFWCkVmQjhsRlQwOUR0djZudUgzL05YMGtZL0ViejVxc2Zva2h2NmY0Sy9pTTRLUFhlM3p3cDBTNjJrajZoYUFidXgKS0hoUFF5SUg2YTJGCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        },
    ]
    created_at                = "2024-05-18 22:01:23.104 +0000 UTC"
    enabled_cluster_log_types = [
        "api",
        "audit",
        "authenticator",
    ]
    endpoint                  = "https://F7E8BB852B48E44DAE8248407834632F.gr7.us-west-2.eks.amazonaws.com"
    id                        = "container-sorcerer-dev"
    identity                  = [
        {
            oidc = [
                {
                    issuer = "https://oidc.eks.us-west-2.amazonaws.com/id/F7E8BB852B48E44DAE8248407834632F"
                },
            ]
        },
    ]
    name                      = "container-sorcerer-dev"
    platform_version          = "eks.7"
    role_arn                  = "arn:aws:iam::909307856304:role/container-sorcerer-dev"
    status                    = "ACTIVE"
    tags                      = {
        "terraform-aws-modules" = "eks"
    }
    tags_all                  = {
        "app"                   = "container-sorcerer"
        "environment"           = "dev"
        "github_repo"           = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
        "terraform-aws-modules" = "eks"
    }
    version                   = "1.29"

    access_config {
        authentication_mode                         = "API_AND_CONFIG_MAP"
        bootstrap_cluster_creator_admin_permissions = false
    }

    encryption_config {
        resources = [
            "secrets",
        ]

        provider {
            key_arn = "arn:aws:kms:us-west-2:909307856304:key/c2b29cf5-2a53-4347-bc03-5ff287da130c"
        }
    }

    kubernetes_network_config {
        ip_family         = "ipv4"
        service_ipv4_cidr = "172.20.0.0/16"
        service_ipv6_cidr = [90mnull[0m[0m
    }

    timeouts {}

    vpc_config {
        cluster_security_group_id = "sg-0727262bb00ed0b1f"
        endpoint_private_access   = true
        endpoint_public_access    = true
        public_access_cidrs       = [
            "0.0.0.0/0",
        ]
        security_group_ids        = [
            "sg-02bdad54b8c5c50b1",
            "sg-0ed83d78a471d3a36",
        ]
        subnet_ids                = [
            "subnet-05e8862eaafe56697",
            "subnet-0aede708ffc7e6ab6",
        ]
        vpc_id                    = "vpc-099cdfd0d3263b7e1"
    }
}

# module.eks.aws_iam_openid_connect_provider.oidc_provider[0]:
resource "aws_iam_openid_connect_provider" "oidc_provider" {
    arn             = "arn:aws:iam::909307856304:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/F7E8BB852B48E44DAE8248407834632F"
    client_id_list  = [
        "sts.amazonaws.com",
    ]
    id              = "arn:aws:iam::909307856304:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/F7E8BB852B48E44DAE8248407834632F"
    tags            = {
        "Name" = "container-sorcerer-dev-eks-irsa"
    }
    tags_all        = {
        "Name"        = "container-sorcerer-dev-eks-irsa"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    thumbprint_list = [
        "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
    ]
    url             = "oidc.eks.us-west-2.amazonaws.com/id/F7E8BB852B48E44DAE8248407834632F"
}

# module.eks.aws_iam_policy.cluster_encryption[0]:
resource "aws_iam_policy" "cluster_encryption" {
    arn              = "arn:aws:iam::909307856304:policy/container-sorcerer-dev-ClusterEncryption2024051822012089370000000c"
    attachment_count = 1
    description      = "Cluster encryption policy to allow cluster role to utilize CMK provided"
    id               = "arn:aws:iam::909307856304:policy/container-sorcerer-dev-ClusterEncryption2024051822012089370000000c"
    name             = "container-sorcerer-dev-ClusterEncryption2024051822012089370000000c"
    name_prefix      = "container-sorcerer-dev-ClusterEncryption"
    path             = "/"
    policy           = jsonencode(
        {
            Statement = [
                {
                    Action   = [
                        "kms:Encrypt",
                        "kms:Decrypt",
                        "kms:ListGrants",
                        "kms:DescribeKey",
                    ]
                    Effect   = "Allow"
                    Resource = "arn:aws:kms:us-west-2:909307856304:key/c2b29cf5-2a53-4347-bc03-5ff287da130c"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    policy_id        = "ANPA5HNXYYWYM33KI4II3"
    tags             = {}
    tags_all         = {
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
}

# module.eks.aws_iam_role.this[0]:
resource "aws_iam_role" "this" {
    arn                   = "arn:aws:iam::909307856304:role/container-sorcerer-dev"
    assume_role_policy    = jsonencode(
        {
            Statement = [
                {
                    Action    = "sts:AssumeRole"
                    Effect    = "Allow"
                    Principal = {
                        Service = "eks.amazonaws.com"
                    }
                    Sid       = "EKSClusterAssumeRole"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    create_date           = "2024-05-18T22:00:57Z"
    description           = [90mnull[0m[0m
    force_detach_policies = true
    id                    = "container-sorcerer-dev"
    managed_policy_arns   = [
        "arn:aws:iam::909307856304:policy/container-sorcerer-dev-ClusterEncryption2024051822012089370000000c",
        "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
        "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
    ]
    max_session_duration  = 3600
    name                  = "container-sorcerer-dev"
    name_prefix           = [90mnull[0m[0m
    path                  = "/"
    permissions_boundary  = [90mnull[0m[0m
    tags                  = {}
    tags_all              = {
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    unique_id             = "AROA5HNXYYWYHAJ2GOZOU"

    inline_policy {
        name   = "container-sorcerer-dev"
        policy = jsonencode(
            {
                Statement = [
                    {
                        Action   = [
                            "logs:CreateLogGroup",
                        ]
                        Effect   = "Deny"
                        Resource = "*"
                    },
                ]
                Version   = "2012-10-17"
            }
        )
    }
}

# module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]:
resource "aws_iam_role_policy_attachment" "cluster_encryption" {
    id         = "container-sorcerer-dev-2024051822012125850000000d"
    policy_arn = "arn:aws:iam::909307856304:policy/container-sorcerer-dev-ClusterEncryption2024051822012089370000000c"
    role       = "container-sorcerer-dev"
}

# module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]:
resource "aws_iam_role_policy_attachment" "this" {
    id         = "container-sorcerer-dev-20240518220058278300000006"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
    role       = "container-sorcerer-dev"
}

# module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"]:
resource "aws_iam_role_policy_attachment" "this" {
    id         = "container-sorcerer-dev-20240518220058262900000005"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
    role       = "container-sorcerer-dev"
}

# module.eks.aws_security_group.cluster[0]:
resource "aws_security_group" "cluster" {
    arn                    = "arn:aws:ec2:us-west-2:909307856304:security-group/sg-02bdad54b8c5c50b1"
    description            = "EKS cluster security group"
    egress                 = []
    id                     = "sg-02bdad54b8c5c50b1"
    ingress                = [
        {
            cidr_blocks      = []
            description      = "Node groups to cluster API"
            from_port        = 443
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = [
                "sg-0fa963eacc8305429",
            ]
            self             = false
            to_port          = 443
        },
    ]
    name                   = "container-sorcerer-dev-cluster-20240518220106181900000009"
    name_prefix            = "container-sorcerer-dev-cluster-"
    owner_id               = "909307856304"
    revoke_rules_on_delete = false
    tags                   = {
        "Name" = "container-sorcerer-dev-cluster"
    }
    tags_all               = {
        "Name"        = "container-sorcerer-dev-cluster"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc_id                 = "vpc-099cdfd0d3263b7e1"
}

# module.eks.aws_security_group.node[0]:
resource "aws_security_group" "node" {
    arn                    = "arn:aws:ec2:us-west-2:909307856304:security-group/sg-0fa963eacc8305429"
    description            = "EKS node shared security group"
    egress                 = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = "Allow all egress"
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
    ]
    id                     = "sg-0fa963eacc8305429"
    ingress                = [
        {
            cidr_blocks      = []
            description      = "Cluster API to node 4443/tcp webhook"
            from_port        = 4443
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = [
                "sg-02bdad54b8c5c50b1",
            ]
            self             = false
            to_port          = 4443
        },
        {
            cidr_blocks      = []
            description      = "Cluster API to node 6443/tcp webhook"
            from_port        = 6443
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = [
                "sg-02bdad54b8c5c50b1",
            ]
            self             = false
            to_port          = 6443
        },
        {
            cidr_blocks      = []
            description      = "Cluster API to node 8443/tcp webhook"
            from_port        = 8443
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = [
                "sg-02bdad54b8c5c50b1",
            ]
            self             = false
            to_port          = 8443
        },
        {
            cidr_blocks      = []
            description      = "Cluster API to node 9443/tcp webhook"
            from_port        = 9443
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = [
                "sg-02bdad54b8c5c50b1",
            ]
            self             = false
            to_port          = 9443
        },
        {
            cidr_blocks      = []
            description      = "Cluster API to node groups"
            from_port        = 443
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = [
                "sg-02bdad54b8c5c50b1",
            ]
            self             = false
            to_port          = 443
        },
        {
            cidr_blocks      = []
            description      = "Cluster API to node kubelets"
            from_port        = 10250
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = [
                "sg-02bdad54b8c5c50b1",
            ]
            self             = false
            to_port          = 10250
        },
        {
            cidr_blocks      = []
            description      = "Node to node CoreDNS UDP"
            from_port        = 53
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "udp"
            security_groups  = []
            self             = true
            to_port          = 53
        },
        {
            cidr_blocks      = []
            description      = "Node to node CoreDNS"
            from_port        = 53
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = true
            to_port          = 53
        },
        {
            cidr_blocks      = []
            description      = "Node to node ingress on ephemeral ports"
            from_port        = 1025
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = true
            to_port          = 65535
        },
    ]
    name                   = "container-sorcerer-dev-node-2024051822010628720000000a"
    name_prefix            = "container-sorcerer-dev-node-"
    owner_id               = "909307856304"
    revoke_rules_on_delete = false
    tags                   = {
        "Name"                                         = "container-sorcerer-dev-node"
        "kubernetes.io/cluster/container-sorcerer-dev" = "owned"
    }
    tags_all               = {
        "Name"                                         = "container-sorcerer-dev-node"
        "app"                                          = "container-sorcerer"
        "environment"                                  = "dev"
        "github_repo"                                  = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
        "kubernetes.io/cluster/container-sorcerer-dev" = "owned"
    }
    vpc_id                 = "vpc-099cdfd0d3263b7e1"
}

# module.eks.aws_security_group_rule.cluster["ingress_nodes_443"]:
resource "aws_security_group_rule" "cluster" {
    description              = "Node groups to cluster API"
    from_port                = 443
    id                       = "sgrule-1972875992"
    protocol                 = "tcp"
    security_group_id        = "sg-02bdad54b8c5c50b1"
    security_group_rule_id   = "sgr-027bdb0e2957268be"
    self                     = false
    source_security_group_id = "sg-0fa963eacc8305429"
    to_port                  = 443
    type                     = "ingress"
}

# module.eks.aws_security_group_rule.node["egress_all"]:
resource "aws_security_group_rule" "node" {
    cidr_blocks            = [
        "0.0.0.0/0",
    ]
    description            = "Allow all egress"
    from_port              = 0
    id                     = "sgrule-2671288338"
    prefix_list_ids        = []
    protocol               = "-1"
    security_group_id      = "sg-0fa963eacc8305429"
    security_group_rule_id = "sgr-0b0e608bd71fde6fc"
    self                   = false
    to_port                = 0
    type                   = "egress"
}

# module.eks.aws_security_group_rule.node["ingress_cluster_443"]:
resource "aws_security_group_rule" "node" {
    description              = "Cluster API to node groups"
    from_port                = 443
    id                       = "sgrule-1806262435"
    prefix_list_ids          = []
    protocol                 = "tcp"
    security_group_id        = "sg-0fa963eacc8305429"
    security_group_rule_id   = "sgr-01d50c704349653b9"
    self                     = false
    source_security_group_id = "sg-02bdad54b8c5c50b1"
    to_port                  = 443
    type                     = "ingress"
}

# module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]:
resource "aws_security_group_rule" "node" {
    description              = "Cluster API to node 4443/tcp webhook"
    from_port                = 4443
    id                       = "sgrule-2899867785"
    prefix_list_ids          = []
    protocol                 = "tcp"
    security_group_id        = "sg-0fa963eacc8305429"
    security_group_rule_id   = "sgr-066439a3381ff6c0c"
    self                     = false
    source_security_group_id = "sg-02bdad54b8c5c50b1"
    to_port                  = 4443
    type                     = "ingress"
}

# module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]:
resource "aws_security_group_rule" "node" {
    description              = "Cluster API to node 6443/tcp webhook"
    from_port                = 6443
    id                       = "sgrule-1704599327"
    prefix_list_ids          = []
    protocol                 = "tcp"
    security_group_id        = "sg-0fa963eacc8305429"
    security_group_rule_id   = "sgr-0b43af3ea2dd70f7d"
    self                     = false
    source_security_group_id = "sg-02bdad54b8c5c50b1"
    to_port                  = 6443
    type                     = "ingress"
}

# module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]:
resource "aws_security_group_rule" "node" {
    description              = "Cluster API to node 8443/tcp webhook"
    from_port                = 8443
    id                       = "sgrule-1992696638"
    prefix_list_ids          = []
    protocol                 = "tcp"
    security_group_id        = "sg-0fa963eacc8305429"
    security_group_rule_id   = "sgr-05c6a3810212385f1"
    self                     = false
    source_security_group_id = "sg-02bdad54b8c5c50b1"
    to_port                  = 8443
    type                     = "ingress"
}

# module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]:
resource "aws_security_group_rule" "node" {
    description              = "Cluster API to node 9443/tcp webhook"
    from_port                = 9443
    id                       = "sgrule-308744437"
    prefix_list_ids          = []
    protocol                 = "tcp"
    security_group_id        = "sg-0fa963eacc8305429"
    security_group_rule_id   = "sgr-00f0704f290213401"
    self                     = false
    source_security_group_id = "sg-02bdad54b8c5c50b1"
    to_port                  = 9443
    type                     = "ingress"
}

# module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]:
resource "aws_security_group_rule" "node" {
    description              = "Cluster API to node kubelets"
    from_port                = 10250
    id                       = "sgrule-1807301640"
    prefix_list_ids          = []
    protocol                 = "tcp"
    security_group_id        = "sg-0fa963eacc8305429"
    security_group_rule_id   = "sgr-0fd0c69510fb681a8"
    self                     = false
    source_security_group_id = "sg-02bdad54b8c5c50b1"
    to_port                  = 10250
    type                     = "ingress"
}

# module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]:
resource "aws_security_group_rule" "node" {
    description            = "Node to node ingress on ephemeral ports"
    from_port              = 1025
    id                     = "sgrule-4226014191"
    prefix_list_ids        = []
    protocol               = "tcp"
    security_group_id      = "sg-0fa963eacc8305429"
    security_group_rule_id = "sgr-07b984a1e184f23f7"
    self                   = true
    to_port                = 65535
    type                   = "ingress"
}

# module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]:
resource "aws_security_group_rule" "node" {
    description            = "Node to node CoreDNS"
    from_port              = 53
    id                     = "sgrule-2643273649"
    prefix_list_ids        = []
    protocol               = "tcp"
    security_group_id      = "sg-0fa963eacc8305429"
    security_group_rule_id = "sgr-0b7d30eaadf951728"
    self                   = true
    to_port                = 53
    type                   = "ingress"
}

# module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]:
resource "aws_security_group_rule" "node" {
    description            = "Node to node CoreDNS UDP"
    from_port              = 53
    id                     = "sgrule-970097758"
    prefix_list_ids        = []
    protocol               = "udp"
    security_group_id      = "sg-0fa963eacc8305429"
    security_group_rule_id = "sgr-07a565761105dd5be"
    self                   = true
    to_port                = 53
    type                   = "ingress"
}

# module.eks.time_sleep.this[0]:
resource "time_sleep" "this" {
    create_duration = "30s"
    id              = "2024-05-18T22:09:49Z"
    triggers        = {
        "cluster_certificate_authority_data" = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJU1F1bytRZzFWNjB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBMU1UZ3lNakF3TXpOYUZ3MHpOREExTVRZeU1qQTFNek5hTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNzeDZWc3BiNFhWRWJrM3JVT2laOWVLdkFBaE9wbHVEMG5QWDVRU00wc1QrZHZUVHZ1K1lBNDIyZk0Kd01nSmFWMXhhbm9ieG9xL0lncWlaZzhJZXRQckkwMzU5OUY1QXlCb0x6MnN4dGsxekJaV2R1azlaampWWXJKdgpaR0djQ2xEWTBtK3htYVlsZTYvMkMrYk5URGczeWM3enpZTkx3SzBxcExEdG1vMjJVUXZVaGI1OC9EZjU4QzBxCmNKMm1ETnFneTdsR3pPQ05ZRUxzRHo4bTVLZ05UNXNkdW82aStXb2J3VDQwUEIrRldWVEV2S25ZZXB2ZGpsQmEKY2YydHp1K1dyRWhyVkJEKzY5SEFJZlB2Vk5NSVIyYXkzUXpIUFVzZDBWbElXOUJjb2g3NG1TSlFSS0ZKRFUzbgpsMkpzOWg4cHpkVmFSV0t1dlBERC8wak9ncnFOQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSZmorK2l4a2lZaUJXUExWcTg1empyL3EwKy9qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjhpMnVRRnZSLwp2ZXorNDF6MXF2NWQyNjZjTnhjVFpTcnk0TUUzZFZ4dUFLSzN1dUIzSThJN2xoRXV0eldFUlJteVI1Zm9JemE1CkYrc3hvb2VqSkdVcHNVSFNkemticVErQlR0RWNITEFKSHRsRVp6Z2xXOGhaQ2IvbXRhcDJScGZybVhtNmQzN1YKeUJPYjNERGc5OENYc1g5ei9vQzlYdlpzTmxncFdvV3NjTkFYU3BLeFhJb2IyLzVHVFFFelYxbFR3OW4wVG52MwpKOE40Vk93Zjh0OVcrRDhoOHQ1YnNGa05hazh2N1lsNVc5UzJVZGpTNTBFOTdCT21Wbk53WWdpbEo5T2R5QjFWCkVmQjhsRlQwOUR0djZudUgzL05YMGtZL0ViejVxc2Zva2h2NmY0Sy9pTTRLUFhlM3p3cDBTNjJrajZoYUFidXgKS0hoUFF5SUg2YTJGCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        "cluster_endpoint"                   = "https://F7E8BB852B48E44DAE8248407834632F.gr7.us-west-2.eks.amazonaws.com"
        "cluster_name"                       = "container-sorcerer-dev"
        "cluster_service_cidr"               = "172.20.0.0/16"
        "cluster_version"                    = "1.29"
    }
}


# module.eks.module.eks_managed_node_group["default"].data.aws_caller_identity.current:
data "aws_caller_identity" "current" {
    account_id = "909307856304"
    arn        = "arn:aws:iam::909307856304:user/cpate"
    id         = "909307856304"
    user_id    = "AIDAILJQKX4U2X522CYZ6"
}

# module.eks.module.eks_managed_node_group["default"].data.aws_iam_policy_document.assume_role_policy[0]:
data "aws_iam_policy_document" "assume_role_policy" {
    id            = "2560088296"
    json          = jsonencode(
        {
            Statement = [
                {
                    Action    = "sts:AssumeRole"
                    Effect    = "Allow"
                    Principal = {
                        Service = "ec2.amazonaws.com"
                    }
                    Sid       = "EKSNodeAssumeRole"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    minified_json = jsonencode(
        {
            Statement = [
                {
                    Action    = "sts:AssumeRole"
                    Effect    = "Allow"
                    Principal = {
                        Service = "ec2.amazonaws.com"
                    }
                    Sid       = "EKSNodeAssumeRole"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    version       = "2012-10-17"

    statement {
        actions       = [
            "sts:AssumeRole",
        ]
        effect        = "Allow"
        not_actions   = []
        not_resources = []
        resources     = []
        sid           = "EKSNodeAssumeRole"

        principals {
            identifiers = [
                "ec2.amazonaws.com",
            ]
            type        = "Service"
        }
    }
}

# module.eks.module.eks_managed_node_group["default"].data.aws_partition.current:
data "aws_partition" "current" {
    dns_suffix         = "amazonaws.com"
    id                 = "aws"
    partition          = "aws"
    reverse_dns_prefix = "com.amazonaws"
}

# module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]:
resource "aws_eks_node_group" "this" {
    ami_type               = "AL2_x86_64"
    arn                    = "arn:aws:eks:us-west-2:909307856304:nodegroup/container-sorcerer-dev/default-20240518220951274500000010/6ac7c6e0-8882-1eff-82bf-ccc81d53450c"
    capacity_type          = "SPOT"
    cluster_name           = "container-sorcerer-dev"
    disk_size              = 0
    id                     = "container-sorcerer-dev:default-20240518220951274500000010"
    instance_types         = [
        "t3.micro",
    ]
    labels                 = {}
    node_group_name        = "default-20240518220951274500000010"
    node_group_name_prefix = "default-"
    node_role_arn          = "arn:aws:iam::909307856304:role/default-eks-node-group-20240518220052255100000001"
    release_version        = "1.29.3-20240514"
    resources              = [
        {
            autoscaling_groups              = [
                {
                    name = "eks-default-20240518220951274500000010-6ac7c6e0-8882-1eff-82bf-ccc81d53450c"
                },
            ]
            remote_access_security_group_id = [90mnull[0m[0m
        },
    ]
    status                 = "ACTIVE"
    subnet_ids             = [
        "subnet-05e8862eaafe56697",
        "subnet-0aede708ffc7e6ab6",
    ]
    tags                   = {
        "Name" = "default"
    }
    tags_all               = {
        "Name"        = "default"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    version                = "1.29"

    launch_template {
        id      = "lt-08b5c49e51ff518cb"
        name    = "default-2024051822095038920000000e"
        version = "1"
    }

    scaling_config {
        desired_size = 2
        max_size     = 3
        min_size     = 1
    }

    timeouts {}

    update_config {
        max_unavailable            = 0
        max_unavailable_percentage = 33
    }
}

# module.eks.module.eks_managed_node_group["default"].aws_iam_role.this[0]:
resource "aws_iam_role" "this" {
    arn                   = "arn:aws:iam::909307856304:role/default-eks-node-group-20240518220052255100000001"
    assume_role_policy    = jsonencode(
        {
            Statement = [
                {
                    Action    = "sts:AssumeRole"
                    Effect    = "Allow"
                    Principal = {
                        Service = "ec2.amazonaws.com"
                    }
                    Sid       = "EKSNodeAssumeRole"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    create_date           = "2024-05-18T22:00:57Z"
    description           = "EKS managed node group IAM role"
    force_detach_policies = true
    id                    = "default-eks-node-group-20240518220052255100000001"
    managed_policy_arns   = [
        "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
        "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
        "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
    ]
    max_session_duration  = 3600
    name                  = "default-eks-node-group-20240518220052255100000001"
    name_prefix           = "default-eks-node-group-"
    path                  = "/"
    permissions_boundary  = [90mnull[0m[0m
    tags                  = {}
    tags_all              = {
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    unique_id             = "AROA5HNXYYWYJU3VS2L7C"
}

# module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["AmazonEC2ContainerRegistryReadOnly"]:
resource "aws_iam_role_policy_attachment" "this" {
    id         = "default-eks-node-group-20240518220052255100000001-20240518220058127100000004"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
    role       = "default-eks-node-group-20240518220052255100000001"
}

# module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["AmazonEKSWorkerNodePolicy"]:
resource "aws_iam_role_policy_attachment" "this" {
    id         = "default-eks-node-group-20240518220052255100000001-20240518220058033100000003"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
    role       = "default-eks-node-group-20240518220052255100000001"
}

# module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["AmazonEKS_CNI_Policy"]:
resource "aws_iam_role_policy_attachment" "this" {
    id         = "default-eks-node-group-20240518220052255100000001-20240518220058026200000002"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
    role       = "default-eks-node-group-20240518220052255100000001"
}

# module.eks.module.eks_managed_node_group["default"].aws_launch_template.this[0]:
resource "aws_launch_template" "this" {
    arn                                  = "arn:aws:ec2:us-west-2:909307856304:launch-template/lt-08b5c49e51ff518cb"
    default_version                      = 1
    description                          = "Custom launch template for default EKS managed node group"
    disable_api_stop                     = false
    disable_api_termination              = false
    ebs_optimized                        = [90mnull[0m[0m
    id                                   = "lt-08b5c49e51ff518cb"
    image_id                             = [90mnull[0m[0m
    instance_initiated_shutdown_behavior = [90mnull[0m[0m
    instance_type                        = [90mnull[0m[0m
    kernel_id                            = [90mnull[0m[0m
    key_name                             = [90mnull[0m[0m
    latest_version                       = 1
    name                                 = "default-2024051822095038920000000e"
    name_prefix                          = "default-"
    ram_disk_id                          = [90mnull[0m[0m
    security_group_names                 = []
    tags                                 = {}
    tags_all                             = {
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    update_default_version               = true
    user_data                            = [90mnull[0m[0m
    vpc_security_group_ids               = [
        "sg-0fa963eacc8305429",
    ]

    metadata_options {
        http_endpoint               = "enabled"
        http_protocol_ipv6          = [90mnull[0m[0m
        http_put_response_hop_limit = 2
        http_tokens                 = "required"
        instance_metadata_tags      = [90mnull[0m[0m
    }

    monitoring {
        enabled = true
    }

    tag_specifications {
        resource_type = "instance"
        tags          = {
            "Name" = "default"
        }
    }
    tag_specifications {
        resource_type = "network-interface"
        tags          = {
            "Name" = "default"
        }
    }
    tag_specifications {
        resource_type = "volume"
        tags          = {
            "Name" = "default"
        }
    }
}


# module.eks.module.eks_managed_node_group["default"].module.user_data.null_resource.validate_cluster_service_cidr:
resource "null_resource" "validate_cluster_service_cidr" {
    id = "805211571716577095"
}


# module.eks.module.kms.data.aws_caller_identity.current[0]:
data "aws_caller_identity" "current" {
    account_id = "909307856304"
    arn        = "arn:aws:iam::909307856304:user/cpate"
    id         = "909307856304"
    user_id    = "AIDAILJQKX4U2X522CYZ6"
}

# module.eks.module.kms.data.aws_iam_policy_document.this[0]:
data "aws_iam_policy_document" "this" {
    id            = "1359205323"
    json          = jsonencode(
        {
            Statement = [
                {
                    Action    = "kms:*"
                    Effect    = "Allow"
                    Principal = {
                        AWS = "arn:aws:iam::909307856304:root"
                    }
                    Resource  = "*"
                    Sid       = "Default"
                },
                {
                    Action    = [
                        "kms:Update*",
                        "kms:UntagResource",
                        "kms:TagResource",
                        "kms:ScheduleKeyDeletion",
                        "kms:Revoke*",
                        "kms:ReplicateKey",
                        "kms:Put*",
                        "kms:List*",
                        "kms:ImportKeyMaterial",
                        "kms:Get*",
                        "kms:Enable*",
                        "kms:Disable*",
                        "kms:Describe*",
                        "kms:Delete*",
                        "kms:Create*",
                        "kms:CancelKeyDeletion",
                    ]
                    Effect    = "Allow"
                    Principal = {
                        AWS = "arn:aws:iam::909307856304:user/cpate"
                    }
                    Resource  = "*"
                    Sid       = "KeyAdministration"
                },
                {
                    Action    = [
                        "kms:ReEncrypt*",
                        "kms:GenerateDataKey*",
                        "kms:Encrypt",
                        "kms:DescribeKey",
                        "kms:Decrypt",
                    ]
                    Effect    = "Allow"
                    Principal = {
                        AWS = "arn:aws:iam::909307856304:role/container-sorcerer-dev"
                    }
                    Resource  = "*"
                    Sid       = "KeyUsage"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    minified_json = jsonencode(
        {
            Statement = [
                {
                    Action    = "kms:*"
                    Effect    = "Allow"
                    Principal = {
                        AWS = "arn:aws:iam::909307856304:root"
                    }
                    Resource  = "*"
                    Sid       = "Default"
                },
                {
                    Action    = [
                        "kms:Update*",
                        "kms:UntagResource",
                        "kms:TagResource",
                        "kms:ScheduleKeyDeletion",
                        "kms:Revoke*",
                        "kms:ReplicateKey",
                        "kms:Put*",
                        "kms:List*",
                        "kms:ImportKeyMaterial",
                        "kms:Get*",
                        "kms:Enable*",
                        "kms:Disable*",
                        "kms:Describe*",
                        "kms:Delete*",
                        "kms:Create*",
                        "kms:CancelKeyDeletion",
                    ]
                    Effect    = "Allow"
                    Principal = {
                        AWS = "arn:aws:iam::909307856304:user/cpate"
                    }
                    Resource  = "*"
                    Sid       = "KeyAdministration"
                },
                {
                    Action    = [
                        "kms:ReEncrypt*",
                        "kms:GenerateDataKey*",
                        "kms:Encrypt",
                        "kms:DescribeKey",
                        "kms:Decrypt",
                    ]
                    Effect    = "Allow"
                    Principal = {
                        AWS = "arn:aws:iam::909307856304:role/container-sorcerer-dev"
                    }
                    Resource  = "*"
                    Sid       = "KeyUsage"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    version       = "2012-10-17"

    statement {
        actions       = [
            "kms:*",
        ]
        effect        = "Allow"
        not_actions   = []
        not_resources = []
        resources     = [
            "*",
        ]
        sid           = "Default"

        principals {
            identifiers = [
                "arn:aws:iam::909307856304:root",
            ]
            type        = "AWS"
        }
    }
    statement {
        actions       = [
            "kms:CancelKeyDeletion",
            "kms:Create*",
            "kms:Delete*",
            "kms:Describe*",
            "kms:Disable*",
            "kms:Enable*",
            "kms:Get*",
            "kms:ImportKeyMaterial",
            "kms:List*",
            "kms:Put*",
            "kms:ReplicateKey",
            "kms:Revoke*",
            "kms:ScheduleKeyDeletion",
            "kms:TagResource",
            "kms:UntagResource",
            "kms:Update*",
        ]
        effect        = "Allow"
        not_actions   = []
        not_resources = []
        resources     = [
            "*",
        ]
        sid           = "KeyAdministration"

        principals {
            identifiers = [
                "arn:aws:iam::909307856304:user/cpate",
            ]
            type        = "AWS"
        }
    }
    statement {
        actions       = [
            "kms:Decrypt",
            "kms:DescribeKey",
            "kms:Encrypt",
            "kms:GenerateDataKey*",
            "kms:ReEncrypt*",
        ]
        effect        = "Allow"
        not_actions   = []
        not_resources = []
        resources     = [
            "*",
        ]
        sid           = "KeyUsage"

        principals {
            identifiers = [
                "arn:aws:iam::909307856304:role/container-sorcerer-dev",
            ]
            type        = "AWS"
        }
    }
}

# module.eks.module.kms.data.aws_partition.current[0]:
data "aws_partition" "current" {
    dns_suffix         = "amazonaws.com"
    id                 = "aws"
    partition          = "aws"
    reverse_dns_prefix = "com.amazonaws"
}

# module.eks.module.kms.aws_kms_alias.this["cluster"]:
resource "aws_kms_alias" "this" {
    arn            = "arn:aws:kms:us-west-2:909307856304:alias/eks/container-sorcerer-dev"
    id             = "alias/eks/container-sorcerer-dev"
    name           = "alias/eks/container-sorcerer-dev"
    name_prefix    = [90mnull[0m[0m
    target_key_arn = "arn:aws:kms:us-west-2:909307856304:key/c2b29cf5-2a53-4347-bc03-5ff287da130c"
    target_key_id  = "c2b29cf5-2a53-4347-bc03-5ff287da130c"
}

# module.eks.module.kms.aws_kms_key.this[0]:
resource "aws_kms_key" "this" {
    arn                                = "arn:aws:kms:us-west-2:909307856304:key/c2b29cf5-2a53-4347-bc03-5ff287da130c"
    bypass_policy_lockout_safety_check = false
    custom_key_store_id                = [90mnull[0m[0m
    customer_master_key_spec           = "SYMMETRIC_DEFAULT"
    description                        = "container-sorcerer-dev cluster encryption key"
    enable_key_rotation                = true
    id                                 = "c2b29cf5-2a53-4347-bc03-5ff287da130c"
    is_enabled                         = true
    key_id                             = "c2b29cf5-2a53-4347-bc03-5ff287da130c"
    key_usage                          = "ENCRYPT_DECRYPT"
    multi_region                       = false
    policy                             = jsonencode(
        {
            Statement = [
                {
                    Action    = "kms:*"
                    Effect    = "Allow"
                    Principal = {
                        AWS = "arn:aws:iam::909307856304:root"
                    }
                    Resource  = "*"
                    Sid       = "Default"
                },
                {
                    Action    = [
                        "kms:Update*",
                        "kms:UntagResource",
                        "kms:TagResource",
                        "kms:ScheduleKeyDeletion",
                        "kms:Revoke*",
                        "kms:ReplicateKey",
                        "kms:Put*",
                        "kms:List*",
                        "kms:ImportKeyMaterial",
                        "kms:Get*",
                        "kms:Enable*",
                        "kms:Disable*",
                        "kms:Describe*",
                        "kms:Delete*",
                        "kms:Create*",
                        "kms:CancelKeyDeletion",
                    ]
                    Effect    = "Allow"
                    Principal = {
                        AWS = "arn:aws:iam::909307856304:user/cpate"
                    }
                    Resource  = "*"
                    Sid       = "KeyAdministration"
                },
                {
                    Action    = [
                        "kms:ReEncrypt*",
                        "kms:GenerateDataKey*",
                        "kms:Encrypt",
                        "kms:DescribeKey",
                        "kms:Decrypt",
                    ]
                    Effect    = "Allow"
                    Principal = {
                        AWS = "arn:aws:iam::909307856304:role/container-sorcerer-dev"
                    }
                    Resource  = "*"
                    Sid       = "KeyUsage"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    rotation_period_in_days            = 365
    tags                               = {
        "terraform-aws-modules" = "eks"
    }
    tags_all                           = {
        "app"                   = "container-sorcerer"
        "environment"           = "dev"
        "github_repo"           = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
        "terraform-aws-modules" = "eks"
    }
    xks_key_id                         = [90mnull[0m[0m
}


# module.vpc.aws_default_network_acl.this[0]:
resource "aws_default_network_acl" "this" {
    arn                    = "arn:aws:ec2:us-west-2:909307856304:network-acl/acl-01ad0a527d5b97fd0"
    default_network_acl_id = "acl-01ad0a527d5b97fd0"
    id                     = "acl-01ad0a527d5b97fd0"
    owner_id               = "909307856304"
    subnet_ids             = [
        "subnet-02d2814e8411f739c",
        "subnet-05e8862eaafe56697",
        "subnet-06bdb20e141c1b565",
        "subnet-0aede708ffc7e6ab6",
    ]
    tags                   = {
        "Name" = "container-sorcerer-default"
    }
    tags_all               = {
        "Name"        = "container-sorcerer-default"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc_id                 = "vpc-099cdfd0d3263b7e1"

    egress {
        action          = "allow"
        cidr_block      = [90mnull[0m[0m
        from_port       = 0
        icmp_code       = 0
        icmp_type       = 0
        ipv6_cidr_block = "::/0"
        protocol        = "-1"
        rule_no         = 101
        to_port         = 0
    }
    egress {
        action          = "allow"
        cidr_block      = "0.0.0.0/0"
        from_port       = 0
        icmp_code       = 0
        icmp_type       = 0
        ipv6_cidr_block = [90mnull[0m[0m
        protocol        = "-1"
        rule_no         = 100
        to_port         = 0
    }

    ingress {
        action          = "allow"
        cidr_block      = [90mnull[0m[0m
        from_port       = 0
        icmp_code       = 0
        icmp_type       = 0
        ipv6_cidr_block = "::/0"
        protocol        = "-1"
        rule_no         = 101
        to_port         = 0
    }
    ingress {
        action          = "allow"
        cidr_block      = "0.0.0.0/0"
        from_port       = 0
        icmp_code       = 0
        icmp_type       = 0
        ipv6_cidr_block = [90mnull[0m[0m
        protocol        = "-1"
        rule_no         = 100
        to_port         = 0
    }
}

# module.vpc.aws_default_route_table.default[0]:
resource "aws_default_route_table" "default" {
    arn                    = "arn:aws:ec2:us-west-2:909307856304:route-table/rtb-034dfe0dd16098d5c"
    default_route_table_id = "rtb-034dfe0dd16098d5c"
    id                     = "rtb-034dfe0dd16098d5c"
    owner_id               = "909307856304"
    propagating_vgws       = []
    route                  = []
    tags                   = {
        "Name" = "container-sorcerer-default"
    }
    tags_all               = {
        "Name"        = "container-sorcerer-default"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc_id                 = "vpc-099cdfd0d3263b7e1"

    timeouts {
        create = "5m"
        update = "5m"
    }
}

# module.vpc.aws_default_security_group.this[0]:
resource "aws_default_security_group" "this" {
    arn                    = "arn:aws:ec2:us-west-2:909307856304:security-group/sg-0fa9e3a59439d7301"
    description            = "default VPC security group"
    egress                 = []
    id                     = "sg-0fa9e3a59439d7301"
    ingress                = []
    name                   = "default"
    name_prefix            = [90mnull[0m[0m
    owner_id               = "909307856304"
    revoke_rules_on_delete = false
    tags                   = {
        "Name" = "container-sorcerer-default"
    }
    tags_all               = {
        "Name"        = "container-sorcerer-default"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc_id                 = "vpc-099cdfd0d3263b7e1"
}

# module.vpc.aws_eip.nat[0]:
resource "aws_eip" "nat" {
    allocation_id            = "eipalloc-081e7f3df7ce6e23b"
    arn                      = "arn:aws:ec2:us-west-2:909307856304:elastic-ip/eipalloc-081e7f3df7ce6e23b"
    association_id           = "eipassoc-0e750e5b006b36482"
    carrier_ip               = [90mnull[0m[0m
    customer_owned_ip        = [90mnull[0m[0m
    customer_owned_ipv4_pool = [90mnull[0m[0m
    domain                   = "vpc"
    id                       = "eipalloc-081e7f3df7ce6e23b"
    instance                 = [90mnull[0m[0m
    network_border_group     = "us-west-2"
    network_interface        = "eni-06688f7f0eb09e542"
    private_dns              = "ip-10-0-101-172.us-west-2.compute.internal"
    private_ip               = "10.0.101.172"
    ptr_record               = [90mnull[0m[0m
    public_dns               = "ec2-34-217-166-192.us-west-2.compute.amazonaws.com"
    public_ip                = "34.217.166.192"
    public_ipv4_pool         = "amazon"
    tags                     = {
        "Name" = "container-sorcerer-us-west-2a"
    }
    tags_all                 = {
        "Name"        = "container-sorcerer-us-west-2a"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc                      = true
}

# module.vpc.aws_internet_gateway.this[0]:
resource "aws_internet_gateway" "this" {
    arn      = "arn:aws:ec2:us-west-2:909307856304:internet-gateway/igw-0af33ad7b1bc25c5e"
    id       = "igw-0af33ad7b1bc25c5e"
    owner_id = "909307856304"
    tags     = {
        "Name" = "container-sorcerer"
    }
    tags_all = {
        "Name"        = "container-sorcerer"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc_id   = "vpc-099cdfd0d3263b7e1"
}

# module.vpc.aws_nat_gateway.this[0]:
resource "aws_nat_gateway" "this" {
    allocation_id                      = "eipalloc-081e7f3df7ce6e23b"
    association_id                     = "eipassoc-0e750e5b006b36482"
    connectivity_type                  = "public"
    id                                 = "nat-09a60b34036df2096"
    network_interface_id               = "eni-06688f7f0eb09e542"
    private_ip                         = "10.0.101.172"
    public_ip                          = "34.217.166.192"
    secondary_allocation_ids           = []
    secondary_private_ip_address_count = 0
    secondary_private_ip_addresses     = []
    subnet_id                          = "subnet-06bdb20e141c1b565"
    tags                               = {
        "Name" = "container-sorcerer-us-west-2a"
    }
    tags_all                           = {
        "Name"        = "container-sorcerer-us-west-2a"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
}

# module.vpc.aws_route.private_nat_gateway[0]:
resource "aws_route" "private_nat_gateway" {
    carrier_gateway_id          = [90mnull[0m[0m
    core_network_arn            = [90mnull[0m[0m
    destination_cidr_block      = "0.0.0.0/0"
    destination_ipv6_cidr_block = [90mnull[0m[0m
    destination_prefix_list_id  = [90mnull[0m[0m
    egress_only_gateway_id      = [90mnull[0m[0m
    gateway_id                  = [90mnull[0m[0m
    id                          = "r-rtb-0c38ef785dd618c4b1080289494"
    instance_id                 = [90mnull[0m[0m
    instance_owner_id           = [90mnull[0m[0m
    local_gateway_id            = [90mnull[0m[0m
    nat_gateway_id              = "nat-09a60b34036df2096"
    network_interface_id        = [90mnull[0m[0m
    origin                      = "CreateRoute"
    route_table_id              = "rtb-0c38ef785dd618c4b"
    state                       = "active"
    transit_gateway_id          = [90mnull[0m[0m
    vpc_endpoint_id             = [90mnull[0m[0m
    vpc_peering_connection_id   = [90mnull[0m[0m

    timeouts {
        create = "5m"
    }
}

# module.vpc.aws_route.public_internet_gateway[0]:
resource "aws_route" "public_internet_gateway" {
    carrier_gateway_id          = [90mnull[0m[0m
    core_network_arn            = [90mnull[0m[0m
    destination_cidr_block      = "0.0.0.0/0"
    destination_ipv6_cidr_block = [90mnull[0m[0m
    destination_prefix_list_id  = [90mnull[0m[0m
    egress_only_gateway_id      = [90mnull[0m[0m
    gateway_id                  = "igw-0af33ad7b1bc25c5e"
    id                          = "r-rtb-089fff72a18b487f51080289494"
    instance_id                 = [90mnull[0m[0m
    instance_owner_id           = [90mnull[0m[0m
    local_gateway_id            = [90mnull[0m[0m
    nat_gateway_id              = [90mnull[0m[0m
    network_interface_id        = [90mnull[0m[0m
    origin                      = "CreateRoute"
    route_table_id              = "rtb-089fff72a18b487f5"
    state                       = "active"
    transit_gateway_id          = [90mnull[0m[0m
    vpc_endpoint_id             = [90mnull[0m[0m
    vpc_peering_connection_id   = [90mnull[0m[0m

    timeouts {
        create = "5m"
    }
}

# module.vpc.aws_route_table.private[0]:
resource "aws_route_table" "private" {
    arn              = "arn:aws:ec2:us-west-2:909307856304:route-table/rtb-0c38ef785dd618c4b"
    id               = "rtb-0c38ef785dd618c4b"
    owner_id         = "909307856304"
    propagating_vgws = []
    route            = [
        {
            carrier_gateway_id         = [90mnull[0m[0m
            cidr_block                 = "0.0.0.0/0"
            core_network_arn           = [90mnull[0m[0m
            destination_prefix_list_id = [90mnull[0m[0m
            egress_only_gateway_id     = [90mnull[0m[0m
            gateway_id                 = [90mnull[0m[0m
            ipv6_cidr_block            = [90mnull[0m[0m
            local_gateway_id           = [90mnull[0m[0m
            nat_gateway_id             = "nat-09a60b34036df2096"
            network_interface_id       = [90mnull[0m[0m
            transit_gateway_id         = [90mnull[0m[0m
            vpc_endpoint_id            = [90mnull[0m[0m
            vpc_peering_connection_id  = [90mnull[0m[0m
        },
    ]
    tags             = {
        "Name" = "container-sorcerer-private"
    }
    tags_all         = {
        "Name"        = "container-sorcerer-private"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc_id           = "vpc-099cdfd0d3263b7e1"
}

# module.vpc.aws_route_table.public[0]:
resource "aws_route_table" "public" {
    arn              = "arn:aws:ec2:us-west-2:909307856304:route-table/rtb-089fff72a18b487f5"
    id               = "rtb-089fff72a18b487f5"
    owner_id         = "909307856304"
    propagating_vgws = []
    route            = [
        {
            carrier_gateway_id         = [90mnull[0m[0m
            cidr_block                 = "0.0.0.0/0"
            core_network_arn           = [90mnull[0m[0m
            destination_prefix_list_id = [90mnull[0m[0m
            egress_only_gateway_id     = [90mnull[0m[0m
            gateway_id                 = "igw-0af33ad7b1bc25c5e"
            ipv6_cidr_block            = [90mnull[0m[0m
            local_gateway_id           = [90mnull[0m[0m
            nat_gateway_id             = [90mnull[0m[0m
            network_interface_id       = [90mnull[0m[0m
            transit_gateway_id         = [90mnull[0m[0m
            vpc_endpoint_id            = [90mnull[0m[0m
            vpc_peering_connection_id  = [90mnull[0m[0m
        },
    ]
    tags             = {
        "Name" = "container-sorcerer-public"
    }
    tags_all         = {
        "Name"        = "container-sorcerer-public"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc_id           = "vpc-099cdfd0d3263b7e1"
}

# module.vpc.aws_route_table_association.private[0]:
resource "aws_route_table_association" "private" {
    gateway_id     = [90mnull[0m[0m
    id             = "rtbassoc-050f490a5404a2580"
    route_table_id = "rtb-0c38ef785dd618c4b"
    subnet_id      = "subnet-05e8862eaafe56697"
}

# module.vpc.aws_route_table_association.private[1]:
resource "aws_route_table_association" "private" {
    gateway_id     = [90mnull[0m[0m
    id             = "rtbassoc-0e2d21d3a792bc95e"
    route_table_id = "rtb-0c38ef785dd618c4b"
    subnet_id      = "subnet-0aede708ffc7e6ab6"
}

# module.vpc.aws_route_table_association.public[0]:
resource "aws_route_table_association" "public" {
    gateway_id     = [90mnull[0m[0m
    id             = "rtbassoc-0cfb6e16b5c674b24"
    route_table_id = "rtb-089fff72a18b487f5"
    subnet_id      = "subnet-06bdb20e141c1b565"
}

# module.vpc.aws_route_table_association.public[1]:
resource "aws_route_table_association" "public" {
    gateway_id     = [90mnull[0m[0m
    id             = "rtbassoc-06507f7609385cec1"
    route_table_id = "rtb-089fff72a18b487f5"
    subnet_id      = "subnet-02d2814e8411f739c"
}

# module.vpc.aws_subnet.private[0]:
resource "aws_subnet" "private" {
    arn                                            = "arn:aws:ec2:us-west-2:909307856304:subnet/subnet-05e8862eaafe56697"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "us-west-2a"
    availability_zone_id                           = "usw2-az1"
    cidr_block                                     = "10.0.1.0/24"
    customer_owned_ipv4_pool                       = [90mnull[0m[0m
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-05e8862eaafe56697"
    ipv6_cidr_block                                = [90mnull[0m[0m
    ipv6_cidr_block_association_id                 = [90mnull[0m[0m
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    outpost_arn                                    = [90mnull[0m[0m
    owner_id                                       = "909307856304"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags                                           = {
        "Name" = "container-sorcerer-private-us-west-2a"
    }
    tags_all                                       = {
        "Name"        = "container-sorcerer-private-us-west-2a"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc_id                                         = "vpc-099cdfd0d3263b7e1"
}

# module.vpc.aws_subnet.private[1]:
resource "aws_subnet" "private" {
    arn                                            = "arn:aws:ec2:us-west-2:909307856304:subnet/subnet-0aede708ffc7e6ab6"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "us-west-2b"
    availability_zone_id                           = "usw2-az2"
    cidr_block                                     = "10.0.2.0/24"
    customer_owned_ipv4_pool                       = [90mnull[0m[0m
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-0aede708ffc7e6ab6"
    ipv6_cidr_block                                = [90mnull[0m[0m
    ipv6_cidr_block_association_id                 = [90mnull[0m[0m
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    outpost_arn                                    = [90mnull[0m[0m
    owner_id                                       = "909307856304"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags                                           = {
        "Name" = "container-sorcerer-private-us-west-2b"
    }
    tags_all                                       = {
        "Name"        = "container-sorcerer-private-us-west-2b"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc_id                                         = "vpc-099cdfd0d3263b7e1"
}

# module.vpc.aws_subnet.public[0]:
resource "aws_subnet" "public" {
    arn                                            = "arn:aws:ec2:us-west-2:909307856304:subnet/subnet-06bdb20e141c1b565"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "us-west-2a"
    availability_zone_id                           = "usw2-az1"
    cidr_block                                     = "10.0.101.0/24"
    customer_owned_ipv4_pool                       = [90mnull[0m[0m
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-06bdb20e141c1b565"
    ipv6_cidr_block                                = [90mnull[0m[0m
    ipv6_cidr_block_association_id                 = [90mnull[0m[0m
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    outpost_arn                                    = [90mnull[0m[0m
    owner_id                                       = "909307856304"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags                                           = {
        "Name" = "container-sorcerer-public-us-west-2a"
    }
    tags_all                                       = {
        "Name"        = "container-sorcerer-public-us-west-2a"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc_id                                         = "vpc-099cdfd0d3263b7e1"
}

# module.vpc.aws_subnet.public[1]:
resource "aws_subnet" "public" {
    arn                                            = "arn:aws:ec2:us-west-2:909307856304:subnet/subnet-02d2814e8411f739c"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "us-west-2b"
    availability_zone_id                           = "usw2-az2"
    cidr_block                                     = "10.0.102.0/24"
    customer_owned_ipv4_pool                       = [90mnull[0m[0m
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-02d2814e8411f739c"
    ipv6_cidr_block                                = [90mnull[0m[0m
    ipv6_cidr_block_association_id                 = [90mnull[0m[0m
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    outpost_arn                                    = [90mnull[0m[0m
    owner_id                                       = "909307856304"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags                                           = {
        "Name" = "container-sorcerer-public-us-west-2b"
    }
    tags_all                                       = {
        "Name"        = "container-sorcerer-public-us-west-2b"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
    vpc_id                                         = "vpc-099cdfd0d3263b7e1"
}

# module.vpc.aws_vpc.this[0]:
resource "aws_vpc" "this" {
    arn                                  = "arn:aws:ec2:us-west-2:909307856304:vpc/vpc-099cdfd0d3263b7e1"
    assign_generated_ipv6_cidr_block     = false
    cidr_block                           = "10.0.0.0/16"
    default_network_acl_id               = "acl-01ad0a527d5b97fd0"
    default_route_table_id               = "rtb-034dfe0dd16098d5c"
    default_security_group_id            = "sg-0fa9e3a59439d7301"
    dhcp_options_id                      = "dopt-a1fabdc4"
    enable_dns_hostnames                 = true
    enable_dns_support                   = true
    enable_network_address_usage_metrics = false
    id                                   = "vpc-099cdfd0d3263b7e1"
    instance_tenancy                     = "default"
    ipv6_association_id                  = [90mnull[0m[0m
    ipv6_cidr_block                      = [90mnull[0m[0m
    ipv6_cidr_block_network_border_group = [90mnull[0m[0m
    ipv6_ipam_pool_id                    = [90mnull[0m[0m
    ipv6_netmask_length                  = 0
    main_route_table_id                  = "rtb-034dfe0dd16098d5c"
    owner_id                             = "909307856304"
    tags                                 = {
        "Name" = "container-sorcerer"
    }
    tags_all                             = {
        "Name"        = "container-sorcerer"
        "app"         = "container-sorcerer"
        "environment" = "dev"
        "github_repo" = "git@github.com:thevanguardian/super-duper-octo-chainsaw.git"
    }
}
